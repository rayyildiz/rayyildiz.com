<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on Ramazan AYYILDIZ</title><link>https://rayyildiz.com/tr/tags/database/</link><description>Recent content in Database on Ramazan AYYILDIZ</description><generator>Hugo</generator><language>tr</language><lastBuildDate>Sat, 12 Jun 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://rayyildiz.com/tr/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>Android Uygulamalarında Veritabanı İşlemleri</title><link>https://rayyildiz.com/tr/posts/android-uygulamalarinda-veritabani-islemleri/</link><pubDate>Sat, 12 Jun 2010 00:00:00 +0000</pubDate><guid>https://rayyildiz.com/tr/posts/android-uygulamalarinda-veritabani-islemleri/</guid><description>&lt;p&gt;Bir uygulama geliştirirken verilerin saklanması ihtiyacı doğmakta ve verilerin uygulamadan ayrı bir yapı olarak durması maksadıyla veritabını kullanılmaktadır. Android bir uygulama geliştirirken, aynı nedenden dolayı verilerin saklanması ihtiyacınız olacaktır. Micro device için uygulama geliştirmek, desktop bir bilgisayar için uygulama geliştirmekten daha zordur. Memory ve harddisk’inizin kısıtlı olması, işlemcinin gücü, multitask uygulama geliştirme sıkıntısı başlıcalarındandır. Android de ise yerleşik sqlite veritabanının yer alması ise Android’e önemli bir artı sunmaktadır.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://rayyildiz.com/images/sqlite1.gif#floatleft" alt="Sqlite"&gt;
&lt;a href="http://www.sqlite.org/" class="external-link" target="_blank" rel="noopener"&gt;Sqlite&lt;/a&gt;, oldukça önemli projelerde kullanılmış (Firefox,Skype, Mcfee, iPhone,…) ve de oldukçe iyi &lt;a href="http://www.sqlite.org/th3.html" class="external-link" target="_blank" rel="noopener"&gt;test edilmiş&lt;/a&gt; bir veritabanıdır. 4K stack ve 100K ise heap için yeterlidir. Android içinde ise gelen sqlite, bir android uygulamasının ihtiyac duyduğu veritabanı işlemlerini karşılayacak düzeydedir.&lt;/p&gt;</description></item><item><title>NoSQL Giriş ve MongoDB</title><link>https://rayyildiz.com/tr/posts/nosql-nedir-ve-mongodb/</link><pubDate>Sun, 25 Apr 2010 00:00:00 +0000</pubDate><guid>https://rayyildiz.com/tr/posts/nosql-nedir-ve-mongodb/</guid><description>&lt;p&gt;NoSQL, isminden de anlaşılabileceği gibi SQL kullanılmadığı veritabanlarına verilen genel bir isimdir. Genelde ORM ile karıştırılmaktadır. NoSQL, işişkisel veritabanlarına (&lt;a href="http://en.wikipedia.org/wiki/Relational_database_management_system" class="external-link" target="_blank" rel="noopener"&gt;RDMS&lt;/a&gt;) alternatif bir tekniktir.&lt;/p&gt;
&lt;p&gt;ilişkisel bir veritabanında (RDMS), tablolar oluşturur, tabloları birbirleriyle ilişki kurarak, join, kartezyen gibi SQL cümlecikleriyle kullanırız. Bunun birçok faydası vardır. Hatta yazılım geliştirirken, SQL den kaçınmak maksadıyla, ORM aracları geliştirilmiştir. Bu sayede, veritabanında yer alan tablolara, nesne gözüyle bakılabilmiş, OOP mantığıyla üzerinde işlem yapılabilmiştir.&lt;/p&gt;
&lt;p&gt;NoSQL ise böyle birşey değildir. &lt;a href="http://en.wikipedia.org/wiki/Object-relational_mapping" class="external-link" target="_blank" rel="noopener"&gt;ORM&lt;/a&gt; araçları, sizin bir nesneye set ettiğiniz değerleri, SQL cevirerek, sizin SQL ile uğraşmanızı engellemiş olurlar. NoSQL veritabanları dağıtık bir mimari ile oluşturulmuş olup, yarının teknolojisi olarak görülmektedirler. Google’ın BigTable, Amazon’un Dynamo, Facebook’un &lt;a href="http://cassandra.apache.org/" class="external-link" target="_blank" rel="noopener"&gt;Cassandra&lt;/a&gt; bu tür birer veritabanlarıdır.Bu üç veritabanı da &lt;a href="http://en.wikipedia.org/wiki/Petabyte" class="external-link" target="_blank" rel="noopener"&gt;PB&lt;/a&gt; boyutunda veri tutmak için geliştirilmiştir. Ben bunlardan konfigurasyon acısından daha kolay yapılan döküman tabanlı bir veritabanı hakkında bilgi vereceğim: &lt;a href="http://www.mongodb.org/" class="external-link" target="_blank" rel="noopener"&gt;MongoDB&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Java Migration Tool Migrate4j</title><link>https://rayyildiz.com/tr/posts/java-migration-tool-migrate4j/</link><pubDate>Sun, 22 Mar 2009 00:00:00 +0000</pubDate><guid>https://rayyildiz.com/tr/posts/java-migration-tool-migrate4j/</guid><description>&lt;p&gt;Migrate4j , java ortamı için geliştirilmiş bir &amp;lsquo;migration&amp;rsquo; aracıdır. &amp;lsquo;Migration&amp;rsquo; bu konuda yakın olan kişilerin cok da kullandığı bir kelime olduğu için aynen bu kelimeyi kullanmak daha doğru geldi bana. Bu araç aslında veritabanını biryerden başka yere taşırken yada yeni özellikler eklerken kullanılan bir araçtır. √áoğunlukla birden fazla kişinin aynı anda üzerinde çalıştığı veritabanlarında buna benzer sorunlar yaşanabilir. Geliştiricelerden birisi yeni tablo eklerken, diğeri ise başka tablolarda sütun ekelem yada cıkarma işlemi yapmış olabilir. İşte bu gibi nedenlerden dolayı veritabanlarının senkronize olması istenir, eksik tabloların ve yeni sütunarın otomatik olarak kurulması, eğer tablo yoksa yeni tablo oluşturulması, varsa üzerinde oynanan sütunların değiştirilmesi istenir. İşte bu tarz sorunları çözmek için çeşitli &amp;lsquo;migration&amp;rsquo; araçları vardır. Bunlardan birisi Migrate4j uygulaması.&lt;/p&gt;</description></item></channel></rss>